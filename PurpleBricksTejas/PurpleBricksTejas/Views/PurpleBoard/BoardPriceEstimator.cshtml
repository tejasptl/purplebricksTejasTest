@using PurpleBricksTejas.Models;
@model PurpleBoardLeaseModel
@{
    ViewBag.Title = "BoardPriceEstimator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <br />
    <h2>Price Estimator</h2>    
    <form id="formBoardPrice" action="">
        <div id="divError" style="display:none;" class="maxFormWidth"></div>
        <br/>
        <table id="tblBoardEstimateDetails" class="table" style="max-width:500px;">
            <tr>
                <td class="control-label">
                    @Html.LabelFor(x => x.BoardSize, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    @Html.DropDownListFor(x => x.BoardSize, new SelectList(Model.LoadBoardSize(), "Value", "Text",
                                Model.BoardSize), "--Select Board Size--"
                                , new { @class = "form-control maxInputWidth", @id = "ddlBoardSize" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(x => x.Property.State, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    @Html.DropDownListFor(x => x.BoardSize, new SelectList(Model.LoadState(), "Value", "Text",
                                Model.Property.State), "--Select State--"
                                , new { @class = "form-control maxInputWidth", @id = "ddlState" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(x => x.FromDate, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    @Html.TextBoxFor(x => x.FromDate, htmlAttributes: new
            {
                @class = "form-control maxInputWidth date-pick",
                @id = "txtFromDate",
                @placeholder = "Select From Date"
            })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(x => x.ToDate, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    @Html.TextBoxFor(x => x.ToDate, htmlAttributes: new
            {
                @class = "form-control maxInputWidth date-pick",
                @id = "txtToDate",
                @placeholder = "Select To Date"
            })
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <a href="javascript:;" class="btn btn-primary" onclick="return submitBoardDetails();" title="Submit">
                        Submit
                    </a>
                    <a href="javascript:;" class="btn btn-secondary" onclick="return clearAll();" title="Submit">
                        Clear
                    </a>
                </td>
            </tr>
            <tr class="trCostEstimate table-success" style="display : none">
                <td>
                    Price Per Day: 
                </td>
                <td>
                    $<span id="spPricePerDay"></span>
                </td>
            </tr>
            <tr class="trCostEstimate table-success" style="display : none">
                <td>
                    No Of Days:
                </td>
                <td>
                    <span id="spDaysOrder"></span>
                </td>
            </tr>
            <tr class="trCostEstimate table-success" style="display : none">
                <td>
                    Discount: 
                </td>
                <td>
                    <span id="spDiscount"></span>%
                </td>
            </tr>
            <tr class="trCostEstimate table-success" style="display : none">
                <td>
                    Total Cost:
                </td>
                <td>
                    $<span id="spCost"></span>
                </td>
            </tr>
        </table>

    </form>
</div>
@section Scripts {
<script type="text/javascript">

    $(document).ready(function () {

        $.datepicker.setDefaults({
            dateFormat: 'dd/mm/yy'
        });

        $('.date-pick').datepicker({
            //format: 'dd/mm/yy'            
        });

    });

    function validateDetails() {

        var boardSize = $('#ddlBoardSize').val() || '';
        var propertyState = $('#ddlState').val() || '';
        var fromDate = $('#txtFromDate').val() || '';
        var toDate = $('#txtToDate').val() || '';
        var errorMessage = '';

        if (boardSize == '') {
            errorMessage += '<li class="list-group-item list-group-item-danger">Please select board size.</li>';
        }
        if (propertyState == '') {
            errorMessage += '<li class="list-group-item list-group-item-danger">Please select property state.</li>';
        }
        if (fromDate == '') {
            errorMessage += '<li class="list-group-item list-group-item-danger">Please select date from.</li>';
        }
        if (toDate == '') {
            errorMessage += '<li class="list-group-item list-group-item-danger">Please select date to.</li>';
        }

        if (errorMessage != '') {
            ShowErrorMessage(errorMessage);
            return false;
        }
        return true;
    }

    function submitBoardDetails() {

        if (validateDetails()) {
            var data = this;
            data.boardSize = $('#ddlBoardSize').val();
            data.propertyState = $('#ddlState').val();
            data.fromDate = $('#txtFromDate').val();
            data.toDate = $('#txtToDate').val();

            var paramData = {
                boardSize: data.boardSize,
                propertyState: data.propertyState,
                fromDate: data.fromDate,
                toDate: data.toDate
            }

            $.ajax({
                url: '@Url.Action("GetBoardPrice", "PurpleBoard")',
                type: 'GET',
                dataType: 'json',
                cache: false,
                data: paramData,
                success: function (response) {
                    var result = JSON.parse(response);

                    $('.trCostEstimate').show();
                    $('#spPricePerDay').text(result.PricePerDay);
                    $('#spDaysOrder').text(result.DaysOrder);
                    $('#spDiscount').text(result.Discount);
                    $('#spCost').text(result.Cost);                    

                    $('#divError').hide();                                       
                }
            });
        }
    }

    function clearAll() {
        $('#ddlBoardSize').val('');
        $('#ddlState').val('');
        $('#txtFromDate').val('');
        $('#txtToDate').val('');

        $('.trCostEstimate').hide();
        $('#divError').hide();
    }

</script>
}